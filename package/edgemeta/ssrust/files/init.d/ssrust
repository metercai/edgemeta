#!/bin/sh /etc/rc.common
START=99
STOP=10

USE_PROCD=1
PROG=ssrust
CONFIGFILE=/etc/ssrust/local.json
CNIPFILE="/etc/ssrust/cnip.zone"
LOCALIPFILE="/etc/ssrust/localip.zone"
SS_RometeIP="85.117.234.55"
SS_Redir_port="60080"


start_service() {
	procd_open_instance
	procd_set_param command $PROG local -d -c $CONFIGFILE
	enable_rules
	procd_set_param file $CONFIGFILE
	procd_set_param respawn
	procd_close_instance
}

stop_service()
{
	disable_rules
	killall $PROG > /dev/null 2>&1
}

service_triggers()
{
	procd_add_reload_trigger "local.json"
}

load_bypass_and_chain() {
  nft add table ip ssrust;
  nft add set ip ssrust BypassList { type ipv4_addr\; flags interval\; }
  nft add set ip ssrust ProxyList { type ipv4_addr\; }
  nft add chain ip ssrust Output { type nat hook output priority mangle\; }
  nft add chain ip ssrust PreRouting { type nat hook prerouting priority dstnat\; }
  nft add chain ip ssrust ProxyFilter { }
  nft add rule ip ssrust ProxyFilter meta l4proto tcp ip daddr != @ProxyList return
  nft add rule ip ssrust ProxyFilter meta l4proto tcp ip daddr @BypassList return
  nft add rule ip ssrust ProxyFilter ip protocol tcp counter redirect to :$SS_Redir_port
  nft add element ip ssrust BypassList { $SS_RometeIP }
  nft -f $LOCALIPFILE
  nft -f $CNIPFILE
	echo "BypassList and ssrust chain was loaded!"
}

enable_rules() {
  nft list table ip ssrust > /dev/null 2>&1 ;
  if [[ $? -ne 0 ]]; then
      load_bypass_and_chain
  fi
	nft add rule ip ssrust Output ip protocol tcp counter jump ProxyFilter
  nft add rule ip ssrust PreRouting ip protocol tcp counter jump ProxyFilter
	echo "SSRust rules are enabled ÔºÅ"
}

disable_rules() {
	nft flush chain ip ssrust Output
  nft flush chain ip ssrust PreRouting

	echo "SSRust rules in nftables are cancelled !"
}
